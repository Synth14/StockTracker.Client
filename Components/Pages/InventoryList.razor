@page "/"
@using Microsoft.AspNetCore.Components
@using StockTracker.Client.Models
@using StockTracker.Client.Services
@inject IInventoryService InventoryService
@inject NavigationManager NavigationManager

<MudText Typo="Typo.h3">Inventaire</MudText>

@if (inventoryItems == null)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudTable Items="inventoryItems" Hover="true" Bordered="true" Striped="true">
        <HeaderContent>
            <MudTh>Marque</MudTh>
            <MudTh>Modèle</MudTh>
            <MudTh>Type</MudTh>
            <MudTh>Numéro de série / Service Tag</MudTh>
            <MudTh>Date de récupération</MudTh>
            <MudTh>Date de vérification</MudTh>
            <MudTh>Vérifié par</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Actions</MudTh>
            <MudTh>State</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Brand">@context.Brand</MudTd>
            <MudTd DataLabel="Model">@context.Model</MudTd>
                <MudTd DataLabel="Model">@context.Type</MudTd>

            <MudTd DataLabel="Serial Number">@context.SerialNumber</MudTd>
            <MudTd DataLabel="Recovery Date">@context.RecoveryDate</MudTd>
            <MudTd DataLabel="Verification Date">@context.VerificationDate?</MudTd>
            <MudTd DataLabel="Verified By">@context.VerifiedBy</MudTd>
                <MudTd DataLabel="Description">@context.Description</MudTd>
                <MudTd DataLabel="État">@context.State</MudTd>
            <MudTd>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => EditItem(context.Id))">Modifier</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="@(async () => await DeleteItem(context.Id))">Supprimer</MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    private List<InventoryItem> inventoryItems;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("OnInitializedAsync called");
        inventoryItems = await InventoryService.GetInventoryItemsAsync();
    }

    private void EditItem(int id)
    {
        Console.WriteLine($"EditItem called with id: {id}");
        NavigationManager.NavigateTo($"/editinventory/{id}");
    }

    private async Task DeleteItem(int id)
    {
        Console.WriteLine($"DeleteItem called with id: {id}");
        await InventoryService.DeleteInventoryItemAsync(id);
        inventoryItems = await InventoryService.GetInventoryItemsAsync();
    }
}